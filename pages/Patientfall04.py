import streamlit as st
import pandas as pd
from datetime import datetime
import os

st.set_page_config(page_title="Patientscenario 4 ‚Äì Stina Eriksson", layout="centered")

st.title("Patientscenario 4")

# ‚úèÔ∏è Patientfall
st.markdown("""
ü©∫ **Stina Eriksson, 52 √•r**

P√• v√•rdcentralen tr√§ffar du en nylistad patient, Stina Eriksson, 52 √•r, som s√∂ker med hudutslag.  
Hon har aldrig diagnostiserats med psoriasis.  
Hon √§r os√§ker p√• om utslagen kan vara √§rftliga.
""")

# Funktion f√∂r val och eventuell fritext vid os√§kerhet/negation
def presence_question_with_comment(label, key_prefix):
    options = ["(V√§lj)", "Ja", "Nej", "Vet ej"]
    response = st.radio(f"**{label}**", options, key=f"{key_prefix}_response")

    comment = ""
    if response in ["Nej", "Vet ej"]:
        comment = st.text_area(
            f"Beskrivning / kommentar f√∂r '{label.lower()}' (frivillig):",
            key=f"{key_prefix}_comment"
        )
    return response, comment

# Studiekod
user_code = st.text_input("Ange din studiekod som du f√•r av intervjuaren och tryck enter:")
if user_code:
    user_code = user_code.zfill(3)
    st.success(f"Studiekod registrerad: {user_code}")

# Fr√•gor
rash, rash_comment = presence_question_with_comment("Har patienten hudutslag?", "rash")
psoriasis, psoriasis_comment = presence_question_with_comment("Har patienten diagnosen psoriasis?", "psoriasis")
heredity, heredity_comment = presence_question_with_comment("Finns √§rftlighet f√∂r liknande besv√§r?", "heredity")
itching, itching_comment = presence_question_with_comment("Upplever patienten kl√•da?", "itching")

# Dokumentationss√§kerhet
confidence = st.slider("Hur s√§ker √§r du p√• din dokumentation?", 1, 7, 4)

# Sammanfattning
st.subheader("üìã Sammanfattning")
st.write(f"- Hudutslag: {rash} ‚Äî Kommentar: {rash_comment}")
st.write(f"- Psoriasis: {psoriasis} ‚Äî Kommentar: {psoriasis_comment}")
st.write(f"- √Ñrftlighet: {heredity} ‚Äî Kommentar: {heredity_comment}")
st.write(f"- Kl√•da: {itching} ‚Äî Kommentar: {itching_comment}")
st.write(f"- Dokumentationss√§kerhet: {confidence}")

# Skicka in
if st.button("Skicka in"):
    if not user_code:
        st.error("V√§nligen ange din studiekod.")
    elif "(V√§lj)" in [rash, psoriasis, heredity, itching]:
        st.error("V√§nligen svara p√• alla fr√•gor.")
    else:
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        csv_file = "stina_eriksson_svar.csv"

        row = pd.DataFrame({
            "Datum": [current_time],
            "Kod": [user_code],
            "Hudutslag": [rash],
            "Hudutslag kommentar": [rash_comment],
            "Psoriasis": [psoriasis],
            "Psoriasis kommentar": [psoriasis_comment],
            "√Ñrftlighet": [heredity],
            "√Ñrftlighet kommentar": [heredity_comment],
            "Kl√•da": [itching],
            "Kl√•da kommentar": [itching_comment],
            "Dokumentationss√§kerhet": [confidence]
        })

        if os.path.exists(csv_file):
            existing = pd.read_csv(csv_file)
            data = pd.concat([existing, row], ignore_index=True)
        else:
            data = row

        data.to_csv(csv_file, index=False)
        st.success("Svar sparade! ‚ú®")
