import streamlit as st
import pandas as pd
from datetime import datetime
import requests
import base64
import os

# Filnamn f칬r CSV
csv_file = "responses.csv"

# GitHub repo detaljer
GITHUB_REPO = "axcaz/documentation-infomodels"  # Byt ut till ditt riktiga repo
GITHUB_BRANCH = "main"
GITHUB_FILE_PATH = "responses.csv"

# H칛mta GitHub-token fr친n Render's Environment Variables
GITHUB_TOKEN = os.getenv("github_token")

# Funktion f칬r att ladda upp fil till GitHub
def upload_to_github(file_path):
    """Laddar upp responses.csv till GitHub"""
    if not GITHUB_TOKEN:
        st.error("GitHub-token saknas! Kontrollera att den 칛r satt i Render's Environment Variables.")
        return

    with open(file_path, "rb") as file:
        content = base64.b64encode(file.read()).decode()

    url = f"https://api.github.com/repos/{GITHUB_REPO}/contents/{GITHUB_FILE_PATH}"
    headers = {"Authorization": f"token {GITHUB_TOKEN}"}

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        sha = response.json()["sha"]
    else:
        sha = None  # Filen finns inte 칛n

    data = {
        "message": "Uppdaterar responses.csv med nya inskickade svar",
        "content": content,
        "branch": GITHUB_BRANCH
    }
    if sha:
        data["sha"] = sha  # Beh칬vs f칬r att uppdatera en fil p친 GitHub

    response = requests.put(url, json=data, headers=headers)

    if response.status_code in [200, 201]:
        st.success("Svaren har sparats och laddats upp till forskningsansvarig!")
    else:
        st.error(f"N친got gick fel vid uppladdning: {response.json()}")

# CSS f칬r layout och stil
st.markdown("""
    <style>
        .stTextInput {
            max-width: 50% !important;  /* Studiekodens inmatningsruta - 50% */
        }
        .stSelectbox {
            width: 30% !important;  /* Svarsalternativen i dropdown-menyerna - 30% */
        }
    </style>
""", unsafe_allow_html=True)

# Fr친ga om studiekod och visa meddelande vid registrering
user_code = st.text_input("Ange din studiekod som du f친r av intervjuaren och tryck enter:")
if user_code:
    st.success("Studiekod registrerad!")

# Titel och patientscenario
st.write("""
### Patientscenario 8: Maja Lind, 48 친r
Patienten s칬ker v친rdcentralen f칬r yrsel. Hon har aldrig haft migr칛n. Hon 칛r os칛ker p친 om hon har l친gt blodtryck. 
Det finns ingen information om hon tar blodf칬rtunnande l칛kemedel.
""")

# Enkla alternativ f칬r dokumentation med f칬rvald "(V칛lj ett alternativ)"
options = ["(V칛lj ett alternativ)", "Ja", "Nej", "Vet ej"]

# Funktion f칬r att visa en fr친ga med dropdown
def document_question(label, key_prefix):
    st.write(f"### {label}")  
    return st.selectbox("", options, key=key_prefix, index=0)  

# Fr친gor f칬r Maja Lind
dizziness = document_question("Upplever patienten yrsel?", "dizziness")
migraine = document_question("Har patienten migr칛n?", "migraine")
low_bp = document_question("Har patienten l친gt blodtryck?", "low_bp")
anticoagulants = document_question("St친r patienten p친 blodf칬rtunnande medicinering?", "anticoagulants")

# 游댳 **Sammanfattning av valda alternativ**
st.write("### Sammanfattning av dokumentation")
st.write(f"- **Yrsel:** {dizziness if dizziness != '(V칛lj ett alternativ)' else 'Ej angiven'}")
st.write(f"- **Migr칛n:** {migraine if migraine != '(V칛lj ett alternativ)' else 'Ej angiven'}")
st.write(f"- **L친gt blodtryck:** {low_bp if low_bp != '(V칛lj ett alternativ)' else 'Ej angiven'}")
st.write(f"- **Blodf칬rtunnande medicinering:** {anticoagulants if anticoagulants != '(V칛lj ett alternativ)' else 'Ej angiven'}")

# Skicka in svaren
if st.button("Skicka in"):
    current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    new_data = pd.DataFrame({
        "Datum": [current_time],
        "Kod": [user_code if user_code else "Ej angiven"],
        "Yrsel": [dizziness if dizziness != "(V칛lj ett alternativ)" else "Ej angiven"],
        "Migr칛n": [migraine if migraine != "(V칛lj ett alternativ)" else "Ej angiven"],
        "L친gt blodtryck": [low_bp if low_bp != "(V칛lj ett alternativ)" else "Ej angiven"],
        "Blodf칬rtunnande medicinering": [anticoagulants if anticoagulants != "(V칛lj ett alternativ)" else "Ej angiven"]
    })

    # Kontrollera om filen redan finns
    if os.path.exists(csv_file):
        existing_data = pd.read_csv(csv_file)
        updated_data = pd.concat([existing_data, new_data], ignore_index=True)
    else:
        updated_data = new_data

    updated_data.to_csv(csv_file, index=False)

    upload_to_github(csv_file)
